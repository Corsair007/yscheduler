Array.prototype.in_array = function(e) {
	for (i = 0; i < this.length && this[i] != e; i++)
		;
	return !(i == this.length);
}

$.validator.setDefaults({
	highlight : function(element) {
		$(element).closest('.form-group').addClass('has-error');
	},
	unhighlight : function(element) {
		$(element).closest('.form-group').removeClass('has-error');
	},
	errorElement : 'span',
	errorClass : 'help-block',
	errorPlacement : function(error, element) {
		if (element.parent('.input-group').length) {
			error.insertAfter(element.parent());
		} else {
			error.insertAfter(element);
		}
	}
});

$.validator.addMethod("taskNameTest", function(value, element, params) {
	var p = /^[0-9a-zA-Z|_|\.|\-|(|)]*$/;
	if (p.test(value))
		return true;
	return false;
}, "名称中可使用的字符包括：数字、字母、下划线、横线、点和括号");

$.validator.addMethod("validName", function(value, element, params) {
	var result = false;
	$.ajax({
		url : '/task/create/name_exist?name=' + $("#name").val(),
		type : 'get',
		success : function(data) {
			if (data.exist == true) {
				result = false;
			} else {
				result = true;
			}
		},
		error : function(data) {
			result = false;
		},
		dataType : "json",
		async : false
	});

	return result;
}, "该名字已经存在！");

$.validator.addMethod("isNormalInteger", function(value, element, params) {
	return /^\+?(0|[1-9]\d*)$/.test(value);
}, "必须为非负整数");

$.validator.addMethod("isPositiveInteger", function(value, element, params) {
	return /^\+?([1-9]\d*)$/.test(value);
}, "必须为正整数");

$.validator.addMethod("isValidateFile", function(value, element, params) {
	if(value!=""){
		//为了避免转义反斜杠出问题，这里将对其进行转换
		var pos1 = value.lastIndexOf('/');
		var pos2 = value.lastIndexOf('\\');
		var pos  = Math.max(pos1, pos2)
		if(pos>=0){
			value = value.substring(pos+1);
		}
		var names=value.split(".");
		var suffix=names[names.length-1];
		var tp ="sh,zip,SH,ZIP";
		var rs=tp.indexOf(suffix);
		if(rs<0){
			return false;
		}else{
			return true;
		}
	}
	return true;
},"您选择的文件类型不合法，请上传zip或sh文件！");

$('#form').validate({
	rules : {
		name : {
			minlength : 2,
			required : true,
			taskNameTest : true,
			validName : true
		},
		command : {
			required : true
		},
		calloutUrl : {
			required : true
		},
		timeout : {
			required : true,
			isPositiveInteger : true
		},
		retryTimes : {
			required : true,
			isNormalInteger : true
		},
		crontab:{
			required: true
		},
		fileupload:{
			isValidateFile: true
		}
	}
});
