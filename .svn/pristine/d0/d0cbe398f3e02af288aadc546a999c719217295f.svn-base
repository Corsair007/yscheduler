package com.yeahmobi.yscheduler.model.service.impl;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.yeahmobi.yscheduler.common.Paginator;
import com.yeahmobi.yscheduler.model.Agent;
import com.yeahmobi.yscheduler.model.AgentExample;
import com.yeahmobi.yscheduler.model.common.Constants;
import com.yeahmobi.yscheduler.model.dao.AgentDao;
import com.yeahmobi.yscheduler.model.service.AgentService;
import com.yeahmobi.yscheduler.model.service.TaskService;

@Service
public class AgentServiceImpl implements AgentService {

    @Autowired
    private AgentDao    agentDao;

    @Autowired
    private TaskService taskService;

    public Agent get(long id) {
        return this.agentDao.selectByPrimaryKey(id);
    }

    public List<Agent> list(int pageNum, Paginator paginator) {
        AgentExample example = new AgentExample();

        example.setOrderByClause("name DESC");

        int count = this.agentDao.countByExample(example);

        paginator.setItemsPerPage(Constants.PAGE_SIZE);
        paginator.setItems(count);
        paginator.setPage(pageNum);

        int offset = paginator.getBeginIndex() - 1;
        int limit = Constants.PAGE_SIZE;

        RowBounds rowBounds = new RowBounds(offset, limit);

        List<Agent> list = this.agentDao.selectByExampleWithRowbounds(example, rowBounds);

        return list;
    }

    public AgentDao getAgentDao() {
        return this.agentDao;
    }

    public void setAgentDao(AgentDao agentDao) {
        this.agentDao = agentDao;
    }

    public List<Agent> list() {
        return this.agentDao.selectByExample(new AgentExample());
    }

    private boolean nameExists(String name) {
        AgentExample example = new AgentExample();
        example.createCriteria().andNameEqualTo(name);
        return this.agentDao.selectByExample(example).size() != 0;
    }

    public void add(Agent agent) {
        if (nameExists(agent.getName())) {
            throw new IllegalArgumentException(String.format("Agent %s 已经存在", agent.getName()));
        }
        Date now = new Date();
        agent.setCreateTime(now);
        agent.setUpdateTime(now);
        this.agentDao.insertSelective(agent);

        // 新增heartbeat任务
        this.taskService.addHeartbeatTask(agent);
    }

    public void remove(long agentId, String name) {
        this.taskService.removeHeartbeatTask(agentId, name);
        if (this.taskService.hasTaskAttachedToAgent(agentId)) {
            throw new IllegalArgumentException(String.format("Agent删除失败(原因：有Task关联在本Agent上)"));
        }

        this.agentDao.deleteByPrimaryKey(agentId);
    }

    public void updateIp(long agentId, String ip) {
        Agent agent = new Agent();
        agent.setId(agentId);
        agent.setIp(ip);
        this.agentDao.updateByPrimaryKeySelective(agent);
    }

}
