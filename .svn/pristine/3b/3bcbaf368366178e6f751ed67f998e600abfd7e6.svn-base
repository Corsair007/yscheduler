package com.yeahmobi.yscheduler.web.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.yeahmobi.yscheduler.common.Paginator;
import com.yeahmobi.yscheduler.model.Agent;
import com.yeahmobi.yscheduler.model.AgentExample;
import com.yeahmobi.yscheduler.model.dao.AgentDao;
import com.yeahmobi.yscheduler.web.common.Constants;
import com.yeahmobi.yscheduler.web.common.NameValuePair;
import com.yeahmobi.yscheduler.web.service.AgentService;

@Service
public class AgentServiceImpl implements AgentService {

    @Autowired
    private AgentDao agentDao;

    public Agent get(long id) {
        return this.agentDao.selectByPrimaryKey(id);
    }

    public List<Agent> list(int pageNum, Paginator paginator) {
        AgentExample example = new AgentExample();

        example.setOrderByClause("create_time DESC");

        int count = this.agentDao.countByExample(example);

        paginator.setItemsPerPage(Constants.PAGE_SIZE);
        paginator.setItems(count);
        paginator.setPage(pageNum);

        int offset = paginator.getBeginIndex() - 1;
        int limit = Constants.PAGE_SIZE;

        RowBounds rowBounds = new RowBounds(offset, limit);

        List<Agent> list = this.agentDao.selectByExampleWithRowbounds(example, rowBounds);

        return list;
    }

    public AgentDao getAgentDao() {
        return this.agentDao;
    }

    public void setAgentDao(AgentDao agentDao) {
        this.agentDao = agentDao;
    }

    public List<NameValuePair> list() {
        List<NameValuePair> result = new ArrayList<NameValuePair>();
        AgentExample example = new AgentExample();
        List<Agent> agents = this.agentDao.selectByExample(example);
        for (Agent agent : agents) {
            NameValuePair pair = new NameValuePair();
            pair.setValue(agent.getId());
            pair.setName(agent.getIp());
            result.add(pair);
        }
        return result;
    }

}
