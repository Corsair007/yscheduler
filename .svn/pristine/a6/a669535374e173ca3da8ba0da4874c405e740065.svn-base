package com.yeahmobi.yscheduler.web.controller.mytask;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.yeahmobi.yscheduler.common.Paginator;
import com.yeahmobi.yscheduler.model.Attempt;
import com.yeahmobi.yscheduler.model.Instance;
import com.yeahmobi.yscheduler.model.Task;
import com.yeahmobi.yscheduler.web.controller.AbstractController;
import com.yeahmobi.yscheduler.web.service.AttemptService;
import com.yeahmobi.yscheduler.web.service.InstanceService;
import com.yeahmobi.yscheduler.web.service.TaskService;
import com.yeahmobi.yscheduler.web.vo.InstanceVO;

/**
 * @author wukezhu
 */
@Controller
@RequestMapping(value = { InstanceController.SCREEN_NAME })
public class InstanceController extends AbstractController {

    public static final String SCREEN_NAME = "mytask/instance";

    @Autowired
    private TaskService        taskService;

    @Autowired
    private InstanceService    instanceService;

    @Autowired
    private AttemptService     attemptService;

    @RequestMapping(value = { "" })
    public ModelAndView instanceList(Integer pageNum, long taskId) {
        Map<String, Object> map = new HashMap<String, Object>();

        Paginator paginator = new Paginator();
        pageNum = ((pageNum == null) || (pageNum < 0)) ? 0 : pageNum;

        List<Instance> instances = this.instanceService.list(taskId, pageNum, paginator);
        List<InstanceVO> list = new ArrayList<InstanceVO>(instances.size());
        if (instances != null) {
            for (Instance instance : instances) {
                InstanceVO vo = new InstanceVO(instance);
                Attempt attempt = this.attemptService.getLastOne(instance.getId());
                vo.setAttempt(attempt);
                int execTimes = this.attemptService.count(instance.getId());
                vo.setExecTimes(execTimes);
                list.add(vo);
            }
        }

        Task task = this.taskService.get(taskId);

        map.put("task", task);
        map.put("list", list);
        map.put("paginator", paginator);

        return screen(map, SCREEN_NAME);
    }

}
