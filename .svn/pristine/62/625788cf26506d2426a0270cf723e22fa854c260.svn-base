package com.yeahmobi.yscheduler.web.controller.workflow;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.yeahmobi.yscheduler.model.service.AgentService;
import com.yeahmobi.yscheduler.model.service.TaskAuthorityService;
import com.yeahmobi.yscheduler.model.service.TaskDependencyService;
import com.yeahmobi.yscheduler.model.service.TaskService;
import com.yeahmobi.yscheduler.model.service.UserService;
import com.yeahmobi.yscheduler.model.service.WorkflowAuthorityService;
import com.yeahmobi.yscheduler.model.service.WorkflowDetailService;
import com.yeahmobi.yscheduler.model.service.WorkflowService;
import com.yeahmobi.yscheduler.web.controller.AbstractController;

/**
 * @author Ryan Sun
 */
@Controller
@RequestMapping(value = { DetailController.SCREEN_NAME })
public class DetailController extends AbstractController {

    public static final String       SCREEN_NAME = "workflow/detail";

    @Autowired
    private TaskService              taskService;

    @Autowired
    private UserService              userService;

    @Autowired
    private AgentService             agentService;

    @Autowired
    private TaskDependencyService    taskDependencyService;

    @Autowired
    private TaskAuthorityService     taskAuthorityService;

    @Autowired
    private WorkflowDetailService    workflowDetailService;

    @Autowired
    private WorkflowService          workflowService;

    @Autowired
    private WorkflowAuthorityService workflowAuthorityService;

    @RequestMapping(value = { "" }, method = RequestMethod.GET)
    public ModelAndView detail(long id) {
        Map<String, Object> map = new HashMap<String, Object>();

        // TODO 待完成
        // Workflow workflow = this.workflowService.get(id);
        // List<WorkflowDetail> list = this.workflowDetailService.list(workflow.getId());
        // User user = this.userService.get(workflow.getOwner());
        //
        // map.put("workflow", workflow);
        // map.put("list", list);
        // map.put("owner", user);
        // map.put("readers", this.workflowAuthorityService.listReadonlyUser(id));
        // map.put("writers", this.workflowAuthorityService.listWritableUser(id));
        // map.put("followers", this.workflowAuthorityService.listFollowUser(id));
        // map.put("users", this.userService.list());

        return screen(map, SCREEN_NAME);
    }

}
