<link href="${rc.contextPath}/assets/css/autocomplete.css" rel="stylesheet" />
<link href="${rc.contextPath}/assets/css/chosen.min.css" rel="stylesheet" />
<link href="${rc.contextPath}/static/css/custom.css" rel="stylesheet" />

<script type="text/javascript" src="${rc.contextPath}/assets/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="${rc.contextPath}/assets/js/jquery.dataTables.bootstrap.js"></script>
<script src="${rc.contextPath}/assets/js/jquery.autocomplete.js" type="text/javascript"></script>
<script src="${rc.contextPath}/assets/js/chosen.jquery.min.js" type="text/javascript"></script>
<script src="${rc.contextPath}/assets/js/bootbox.min.js" type="text/javascript"></script>
<script src="${rc.contextPath}/assets/js/jquery.validate.min.js" type="text/javascript"></script>
<script src="${rc.contextPath}/static/js/validate.js" type="text/javascript"></script>

<script type="text/javascript">
	function dyniframesize(down) {
		var pTar = null;
		if (document.getElementById) {
			pTar = document.getElementById(down);
		} else {
			eval('pTar = ' + down + ';');
		}
		if (pTar && !window.opera) {
			//begin resizing iframe 
			pTar.style.display = "block"
			if (pTar.contentDocument && pTar.contentDocument.body.offsetHeight) {
				//ns6 syntax 
				pTar.height = pTar.contentDocument.body.offsetHeight;
			} else if (pTar.Document && pTar.Document.body.scrollHeight) {
				//ie5+ syntax 
				pTar.height = pTar.Document.body.scrollHeight;
			}
		}
	}
	function addTask() {
		$("#taskTable").append($("#taskRow").html());
		$(".chosen-select").chosen({});
	};
	function removeTask(btn) {
		$(btn).parent().parent().remove();
	};

	function getTopo(form) {
		if ($('#updateBtn').text().trim() == "修改") {
			$("#topo").load('/topo?id=$!{workflow.id}&type=workflow');
		} else {
			updateTaskInner(form, buildTopoDone, buildTopoDone, '${rc.contextPath}/topo')
		}
	}

	function updateTask(form) {
		return updateTaskInner(form, updateTaskDone, app.httpError, $(form).attr('action'));
	}

	function updateTaskInner(form, successFn, failFn, action) {
		var btn = $('#updateBtn');
		if (btn.text().trim() == "修改") {
			app.onCrontabTip();
			btn.html("保存");
			$('#cancelBtn').html("取消");
			$('.field').removeAttr("readonly");
			$(".btn_field").show();
			$('select[name="taskId"]').prop('disabled', false).trigger("chosen:updated");
			$('select[name="dependencyTaskId"]').prop('disabled', false).trigger("chosen:updated");

		} else {
			//遍历form，修改name，后缀添加i
			try {
				$.each($("#taskTable tr"), function(i, el) {
					var tds = $(el).children("td");
					$.each(tds, function(j, td) {
						var input = $(td).children("input");
						if (!(input.length > 0)) {
							input = $(td).children("select");
						}
						var name = input.attr("name");
						if (name) {
							//去掉下划线后面
							var _index = name.indexOf('_');
							if (_index != -1) {
								name = name.substring(0, _index);
							}
							//添加下划线和序号
							input.attr("name", name + '_' + i);
						}
					});
				});
			} catch (e) {
				console.log(e);
			}
			$.ajax({
				type : $(form).attr('method'),
				url : action,
				data : $(form).serialize(),
				dataType : "json",
				success : successFn,
				error : failFn
			});
		}
		return false;
	};

	function buildTopoDone(data) {
		if (data.success == false) {
			app.alertError(data.errorMsg);
		} else {
			$('#topo').html(data.responseText);
		}
	}
	function updateTaskDone(data) {
		if (data.success == false) {
			app.alertError(data.errorMsg);
		} else {
			window.location = window.contextPath + "/workflow";
		}
	};
	$("[rel=tooltip]").tooltip();
	$(document).ready(function() {
		$(".chosen-select").chosen({});
	});
</script>

